{"version":3,"sources":["index.js"],"names":["Counter","props","_this","Object","C_Users_Orzoon_Kunwar_Desktop_learn_react_react_counter_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Orzoon_Kunwar_Desktop_learn_react_react_counter_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Orzoon_Kunwar_Desktop_learn_react_react_counter_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","increment","setState","count","state","decrement","reset","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAIMA,qBACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAOJ,KAKXQ,UAAY,WACRP,EAAKQ,SAAS,CACVC,MAAOT,EAAKU,MAAMD,MAAQ,KARfT,EAYnBW,UAAY,WACRX,EAAKQ,SAAU,CACXC,MAAOT,EAAKU,MAAMD,MAAO,KAddT,EAiBnBY,MAAQ,WACJZ,EAAKQ,SAAS,CACVC,MAAO,KAjBXT,EAAKU,MAAQ,CACTD,MAAO,GAHIT,wEAsBT,IAAAa,EAAAV,KACN,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,UAAKb,KAAKO,MAAMD,OAChBK,EAAAC,EAAAC,cAAA,UAAQE,QAAW,WAAOL,EAAKN,aAAcU,UAAY,aAAzD,MACAH,EAAAC,EAAAC,cAAA,UAAQE,QAAW,WAAOL,EAAKD,SAAUK,UAAY,SAAQH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,qBAC5EH,EAAAC,EAAAC,cAAA,UAAQE,QAAW,WAAOL,EAAKF,aAAcM,UAAY,aAAzD,eA7BME,IAAMC,YAmC5BC,IAASC,OAAOR,EAAAC,EAAAC,cAAClB,EAAD,MAAayB,SAASC,eAAe","file":"static/js/main.cf8a571b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\n\nclass Counter extends React.Component {\n    constructor(props) {\n        super (props);\n        this.state = {\n            count: 0\n        }\n    }\n    increment = () => {\n        this.setState({\n            count: this.state.count + 1\n        })\n    }\n    \n    decrement = () => {\n        this.setState ({\n            count: this.state.count -1\n        })\n    }\n    reset = () => {\n        this.setState({\n            count: 0\n        })\n    }\n    render () {\n        return (\n            <div className = 'container'>\n                <h1>{this.state.count}</h1>\n                <button onClick = {() => {this.increment()}} className = \"increment\"> +</button>\n                <button onClick = {() => {this.reset()}} className = \"reset\"><i className = \"fas fa-sync-alt\"></i></button>\n                <button onClick = {() => {this.decrement()}} className = 'decrement'> - </button> \n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Counter />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}